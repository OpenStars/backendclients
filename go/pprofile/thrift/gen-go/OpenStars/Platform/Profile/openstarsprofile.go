// Autogenerated by Thrift Compiler (0.11.0)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package Profile

import (
	"bytes"
	"reflect"
	"database/sql/driver"
	"errors"
	"context"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = context.Background
var _ = reflect.DeepEqual
var _ = bytes.Equal

type TErrorCode int64
const (
  TErrorCode_EGood TErrorCode = 0
  TErrorCode_ENotFound TErrorCode = -1
  TErrorCode_EUnknown TErrorCode = -2
  TErrorCode_EDataExisted TErrorCode = -3
)

func (p TErrorCode) String() string {
  switch p {
  case TErrorCode_EGood: return "EGood"
  case TErrorCode_ENotFound: return "ENotFound"
  case TErrorCode_EUnknown: return "EUnknown"
  case TErrorCode_EDataExisted: return "EDataExisted"
  }
  return "<UNSET>"
}

func TErrorCodeFromString(s string) (TErrorCode, error) {
  switch s {
  case "EGood": return TErrorCode_EGood, nil 
  case "ENotFound": return TErrorCode_ENotFound, nil 
  case "EUnknown": return TErrorCode_EUnknown, nil 
  case "EDataExisted": return TErrorCode_EDataExisted, nil 
  }
  return TErrorCode(0), fmt.Errorf("not a valid TErrorCode string")
}


func TErrorCodePtr(v TErrorCode) *TErrorCode { return &v }

func (p TErrorCode) MarshalText() ([]byte, error) {
return []byte(p.String()), nil
}

func (p *TErrorCode) UnmarshalText(text []byte) error {
q, err := TErrorCodeFromString(string(text))
if (err != nil) {
return err
}
*p = q
return nil
}

func (p *TErrorCode) Scan(value interface{}) error {
v, ok := value.(int64)
if !ok {
return errors.New("Scan value is not int64")
}
*p = TErrorCode(v)
return nil
}

func (p * TErrorCode) Value() (driver.Value, error) {
  if p == nil {
    return nil, nil
  }
return int64(*p), nil
}
type TKey int64

func TKeyPtr(v TKey) *TKey { return &v }

type TData *TPlatformProfile

func TDataPtr(v TData) *TData { return &v }

// Attributes:
//  - Sid
//  - Name
//  - Email
type TSocialProfile struct {
  Sid string `thrift:"sid,1" db:"sid" json:"sid"`
  Name string `thrift:"name,2" db:"name" json:"name"`
  Email string `thrift:"email,3" db:"email" json:"email"`
}

func NewTSocialProfile() *TSocialProfile {
  return &TSocialProfile{}
}


func (p *TSocialProfile) GetSid() string {
  return p.Sid
}

func (p *TSocialProfile) GetName() string {
  return p.Name
}

func (p *TSocialProfile) GetEmail() string {
  return p.Email
}
func (p *TSocialProfile) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField1(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 2:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField2(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 3:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField3(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TSocialProfile)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.Sid = v
}
  return nil
}

func (p *TSocialProfile)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.Name = v
}
  return nil
}

func (p *TSocialProfile)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.Email = v
}
  return nil
}

func (p *TSocialProfile) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("TSocialProfile"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TSocialProfile) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("sid", thrift.STRING, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:sid: ", p), err) }
  if err := oprot.WriteString(string(p.Sid)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.sid (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:sid: ", p), err) }
  return err
}

func (p *TSocialProfile) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("name", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:name: ", p), err) }
  if err := oprot.WriteString(string(p.Name)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.name (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:name: ", p), err) }
  return err
}

func (p *TSocialProfile) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("email", thrift.STRING, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:email: ", p), err) }
  if err := oprot.WriteString(string(p.Email)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.email (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:email: ", p), err) }
  return err
}

func (p *TSocialProfile) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TSocialProfile(%+v)", *p)
}

// Attributes:
//  - Username
//  - DisplayName
//  - TrustedEmails
//  - TrustedMobiles
//  - PublicKeys
//  - ExtData
//  - ConnectedSocial
type TPlatformProfile struct {
  Username string `thrift:"username,1" db:"username" json:"username"`
  DisplayName string `thrift:"displayName,2" db:"displayName" json:"displayName"`
  TrustedEmails map[string]bool `thrift:"trustedEmails,3" db:"trustedEmails" json:"trustedEmails"`
  TrustedMobiles map[string]bool `thrift:"trustedMobiles,4" db:"trustedMobiles" json:"trustedMobiles"`
  PublicKeys []string `thrift:"publicKeys,5" db:"publicKeys" json:"publicKeys"`
  ExtData map[string]string `thrift:"ExtData,6" db:"ExtData" json:"ExtData"`
  ConnectedSocial map[string]*TSocialProfile `thrift:"connectedSocial,7" db:"connectedSocial" json:"connectedSocial"`
}

func NewTPlatformProfile() *TPlatformProfile {
  return &TPlatformProfile{}
}


func (p *TPlatformProfile) GetUsername() string {
  return p.Username
}

func (p *TPlatformProfile) GetDisplayName() string {
  return p.DisplayName
}

func (p *TPlatformProfile) GetTrustedEmails() map[string]bool {
  return p.TrustedEmails
}

func (p *TPlatformProfile) GetTrustedMobiles() map[string]bool {
  return p.TrustedMobiles
}

func (p *TPlatformProfile) GetPublicKeys() []string {
  return p.PublicKeys
}

func (p *TPlatformProfile) GetExtData() map[string]string {
  return p.ExtData
}

func (p *TPlatformProfile) GetConnectedSocial() map[string]*TSocialProfile {
  return p.ConnectedSocial
}
func (p *TPlatformProfile) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField1(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 2:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField2(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 3:
      if fieldTypeId == thrift.MAP {
        if err := p.ReadField3(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 4:
      if fieldTypeId == thrift.MAP {
        if err := p.ReadField4(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 5:
      if fieldTypeId == thrift.LIST {
        if err := p.ReadField5(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 6:
      if fieldTypeId == thrift.MAP {
        if err := p.ReadField6(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 7:
      if fieldTypeId == thrift.MAP {
        if err := p.ReadField7(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfile)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.Username = v
}
  return nil
}

func (p *TPlatformProfile)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.DisplayName = v
}
  return nil
}

func (p *TPlatformProfile)  ReadField3(iprot thrift.TProtocol) error {
  _, _, size, err := iprot.ReadMapBegin()
  if err != nil {
    return thrift.PrependError("error reading map begin: ", err)
  }
  tMap := make(map[string]bool, size)
  p.TrustedEmails =  tMap
  for i := 0; i < size; i ++ {
var _key0 string
    if v, err := iprot.ReadString(); err != nil {
    return thrift.PrependError("error reading field 0: ", err)
} else {
    _key0 = v
}
var _val1 bool
    if v, err := iprot.ReadBool(); err != nil {
    return thrift.PrependError("error reading field 0: ", err)
} else {
    _val1 = v
}
    p.TrustedEmails[_key0] = _val1
  }
  if err := iprot.ReadMapEnd(); err != nil {
    return thrift.PrependError("error reading map end: ", err)
  }
  return nil
}

func (p *TPlatformProfile)  ReadField4(iprot thrift.TProtocol) error {
  _, _, size, err := iprot.ReadMapBegin()
  if err != nil {
    return thrift.PrependError("error reading map begin: ", err)
  }
  tMap := make(map[string]bool, size)
  p.TrustedMobiles =  tMap
  for i := 0; i < size; i ++ {
var _key2 string
    if v, err := iprot.ReadString(); err != nil {
    return thrift.PrependError("error reading field 0: ", err)
} else {
    _key2 = v
}
var _val3 bool
    if v, err := iprot.ReadBool(); err != nil {
    return thrift.PrependError("error reading field 0: ", err)
} else {
    _val3 = v
}
    p.TrustedMobiles[_key2] = _val3
  }
  if err := iprot.ReadMapEnd(); err != nil {
    return thrift.PrependError("error reading map end: ", err)
  }
  return nil
}

func (p *TPlatformProfile)  ReadField5(iprot thrift.TProtocol) error {
  _, size, err := iprot.ReadListBegin()
  if err != nil {
    return thrift.PrependError("error reading list begin: ", err)
  }
  tSlice := make([]string, 0, size)
  p.PublicKeys =  tSlice
  for i := 0; i < size; i ++ {
var _elem4 string
    if v, err := iprot.ReadString(); err != nil {
    return thrift.PrependError("error reading field 0: ", err)
} else {
    _elem4 = v
}
    p.PublicKeys = append(p.PublicKeys, _elem4)
  }
  if err := iprot.ReadListEnd(); err != nil {
    return thrift.PrependError("error reading list end: ", err)
  }
  return nil
}

func (p *TPlatformProfile)  ReadField6(iprot thrift.TProtocol) error {
  _, _, size, err := iprot.ReadMapBegin()
  if err != nil {
    return thrift.PrependError("error reading map begin: ", err)
  }
  tMap := make(map[string]string, size)
  p.ExtData =  tMap
  for i := 0; i < size; i ++ {
var _key5 string
    if v, err := iprot.ReadString(); err != nil {
    return thrift.PrependError("error reading field 0: ", err)
} else {
    _key5 = v
}
var _val6 string
    if v, err := iprot.ReadString(); err != nil {
    return thrift.PrependError("error reading field 0: ", err)
} else {
    _val6 = v
}
    p.ExtData[_key5] = _val6
  }
  if err := iprot.ReadMapEnd(); err != nil {
    return thrift.PrependError("error reading map end: ", err)
  }
  return nil
}

func (p *TPlatformProfile)  ReadField7(iprot thrift.TProtocol) error {
  _, _, size, err := iprot.ReadMapBegin()
  if err != nil {
    return thrift.PrependError("error reading map begin: ", err)
  }
  tMap := make(map[string]*TSocialProfile, size)
  p.ConnectedSocial =  tMap
  for i := 0; i < size; i ++ {
var _key7 string
    if v, err := iprot.ReadString(); err != nil {
    return thrift.PrependError("error reading field 0: ", err)
} else {
    _key7 = v
}
    _val8 := &TSocialProfile{}
    if err := _val8.Read(iprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", _val8), err)
    }
    p.ConnectedSocial[_key7] = _val8
  }
  if err := iprot.ReadMapEnd(); err != nil {
    return thrift.PrependError("error reading map end: ", err)
  }
  return nil
}

func (p *TPlatformProfile) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("TPlatformProfile"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
    if err := p.writeField4(oprot); err != nil { return err }
    if err := p.writeField5(oprot); err != nil { return err }
    if err := p.writeField6(oprot); err != nil { return err }
    if err := p.writeField7(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfile) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("username", thrift.STRING, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:username: ", p), err) }
  if err := oprot.WriteString(string(p.Username)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.username (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:username: ", p), err) }
  return err
}

func (p *TPlatformProfile) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("displayName", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:displayName: ", p), err) }
  if err := oprot.WriteString(string(p.DisplayName)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.displayName (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:displayName: ", p), err) }
  return err
}

func (p *TPlatformProfile) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("trustedEmails", thrift.MAP, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:trustedEmails: ", p), err) }
  if err := oprot.WriteMapBegin(thrift.STRING, thrift.BOOL, len(p.TrustedEmails)); err != nil {
    return thrift.PrependError("error writing map begin: ", err)
  }
  for k, v := range p.TrustedEmails {
    if err := oprot.WriteString(string(k)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T. (0) field write error: ", p), err) }
    if err := oprot.WriteBool(bool(v)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T. (0) field write error: ", p), err) }
  }
  if err := oprot.WriteMapEnd(); err != nil {
    return thrift.PrependError("error writing map end: ", err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:trustedEmails: ", p), err) }
  return err
}

func (p *TPlatformProfile) writeField4(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("trustedMobiles", thrift.MAP, 4); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:trustedMobiles: ", p), err) }
  if err := oprot.WriteMapBegin(thrift.STRING, thrift.BOOL, len(p.TrustedMobiles)); err != nil {
    return thrift.PrependError("error writing map begin: ", err)
  }
  for k, v := range p.TrustedMobiles {
    if err := oprot.WriteString(string(k)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T. (0) field write error: ", p), err) }
    if err := oprot.WriteBool(bool(v)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T. (0) field write error: ", p), err) }
  }
  if err := oprot.WriteMapEnd(); err != nil {
    return thrift.PrependError("error writing map end: ", err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 4:trustedMobiles: ", p), err) }
  return err
}

func (p *TPlatformProfile) writeField5(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("publicKeys", thrift.LIST, 5); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:publicKeys: ", p), err) }
  if err := oprot.WriteListBegin(thrift.STRING, len(p.PublicKeys)); err != nil {
    return thrift.PrependError("error writing list begin: ", err)
  }
  for _, v := range p.PublicKeys {
    if err := oprot.WriteString(string(v)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T. (0) field write error: ", p), err) }
  }
  if err := oprot.WriteListEnd(); err != nil {
    return thrift.PrependError("error writing list end: ", err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 5:publicKeys: ", p), err) }
  return err
}

func (p *TPlatformProfile) writeField6(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("ExtData", thrift.MAP, 6); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:ExtData: ", p), err) }
  if err := oprot.WriteMapBegin(thrift.STRING, thrift.STRING, len(p.ExtData)); err != nil {
    return thrift.PrependError("error writing map begin: ", err)
  }
  for k, v := range p.ExtData {
    if err := oprot.WriteString(string(k)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T. (0) field write error: ", p), err) }
    if err := oprot.WriteString(string(v)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T. (0) field write error: ", p), err) }
  }
  if err := oprot.WriteMapEnd(); err != nil {
    return thrift.PrependError("error writing map end: ", err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 6:ExtData: ", p), err) }
  return err
}

func (p *TPlatformProfile) writeField7(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("connectedSocial", thrift.MAP, 7); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:connectedSocial: ", p), err) }
  if err := oprot.WriteMapBegin(thrift.STRING, thrift.STRUCT, len(p.ConnectedSocial)); err != nil {
    return thrift.PrependError("error writing map begin: ", err)
  }
  for k, v := range p.ConnectedSocial {
    if err := oprot.WriteString(string(k)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T. (0) field write error: ", p), err) }
    if err := v.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", v), err)
    }
  }
  if err := oprot.WriteMapEnd(); err != nil {
    return thrift.PrependError("error writing map end: ", err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 7:connectedSocial: ", p), err) }
  return err
}

func (p *TPlatformProfile) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfile(%+v)", *p)
}

// Attributes:
//  - ErrorCode
//  - Data
type TDataResult_ struct {
  ErrorCode TErrorCode `thrift:"errorCode,1" db:"errorCode" json:"errorCode"`
  Data *TPlatformProfile `thrift:"data,2" db:"data" json:"data,omitempty"`
}

func NewTDataResult_() *TDataResult_ {
  return &TDataResult_{}
}


func (p *TDataResult_) GetErrorCode() TErrorCode {
  return p.ErrorCode
}
var TDataResult__Data_DEFAULT *TPlatformProfile
func (p *TDataResult_) GetData() *TPlatformProfile {
  if !p.IsSetData() {
    return TDataResult__Data_DEFAULT
  }
return p.Data
}
func (p *TDataResult_) IsSetData() bool {
  return p.Data != nil
}

func (p *TDataResult_) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if fieldTypeId == thrift.I32 {
        if err := p.ReadField1(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 2:
      if fieldTypeId == thrift.STRUCT {
        if err := p.ReadField2(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TDataResult_)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  temp := TErrorCode(v)
  p.ErrorCode = temp
}
  return nil
}

func (p *TDataResult_)  ReadField2(iprot thrift.TProtocol) error {
  p.Data = &TPlatformProfile{}
  if err := p.Data.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Data), err)
  }
  return nil
}

func (p *TDataResult_) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("TDataResult"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TDataResult_) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("errorCode", thrift.I32, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:errorCode: ", p), err) }
  if err := oprot.WriteI32(int32(p.ErrorCode)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.errorCode (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:errorCode: ", p), err) }
  return err
}

func (p *TDataResult_) writeField2(oprot thrift.TProtocol) (err error) {
  if p.IsSetData() {
    if err := oprot.WriteFieldBegin("data", thrift.STRUCT, 2); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:data: ", p), err) }
    if err := p.Data.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Data), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 2:data: ", p), err) }
  }
  return err
}

func (p *TDataResult_) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TDataResult_(%+v)", *p)
}

type TDataServiceR interface {
  // Parameters:
  //  - Key
  GetData(ctx context.Context, key TKey) (r *TDataResult_, err error)
}

type TDataServiceRClient struct {
  c thrift.TClient
}

// Deprecated: Use NewTDataServiceR instead
func NewTDataServiceRClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *TDataServiceRClient {
  return &TDataServiceRClient{
    c: thrift.NewTStandardClient(f.GetProtocol(t), f.GetProtocol(t)),
  }
}

// Deprecated: Use NewTDataServiceR instead
func NewTDataServiceRClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *TDataServiceRClient {
  return &TDataServiceRClient{
    c: thrift.NewTStandardClient(iprot, oprot),
  }
}

func NewTDataServiceRClient(c thrift.TClient) *TDataServiceRClient {
  return &TDataServiceRClient{
    c: c,
  }
}

// Parameters:
//  - Key
func (p *TDataServiceRClient) GetData(ctx context.Context, key TKey) (r *TDataResult_, err error) {
  var _args9 TDataServiceRGetDataArgs
  _args9.Key = key
  var _result10 TDataServiceRGetDataResult
  if err = p.c.Call(ctx, "getData", &_args9, &_result10); err != nil {
    return
  }
  return _result10.GetSuccess(), nil
}

type TDataServiceRProcessor struct {
  processorMap map[string]thrift.TProcessorFunction
  handler TDataServiceR
}

func (p *TDataServiceRProcessor) AddToProcessorMap(key string, processor thrift.TProcessorFunction) {
  p.processorMap[key] = processor
}

func (p *TDataServiceRProcessor) GetProcessorFunction(key string) (processor thrift.TProcessorFunction, ok bool) {
  processor, ok = p.processorMap[key]
  return processor, ok
}

func (p *TDataServiceRProcessor) ProcessorMap() map[string]thrift.TProcessorFunction {
  return p.processorMap
}

func NewTDataServiceRProcessor(handler TDataServiceR) *TDataServiceRProcessor {

  self11 := &TDataServiceRProcessor{handler:handler, processorMap:make(map[string]thrift.TProcessorFunction)}
  self11.processorMap["getData"] = &tDataServiceRProcessorGetData{handler:handler}
return self11
}

func (p *TDataServiceRProcessor) Process(ctx context.Context, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  name, _, seqId, err := iprot.ReadMessageBegin()
  if err != nil { return false, err }
  if processor, ok := p.GetProcessorFunction(name); ok {
    return processor.Process(ctx, seqId, iprot, oprot)
  }
  iprot.Skip(thrift.STRUCT)
  iprot.ReadMessageEnd()
  x12 := thrift.NewTApplicationException(thrift.UNKNOWN_METHOD, "Unknown function " + name)
  oprot.WriteMessageBegin(name, thrift.EXCEPTION, seqId)
  x12.Write(oprot)
  oprot.WriteMessageEnd()
  oprot.Flush()
  return false, x12

}

type tDataServiceRProcessorGetData struct {
  handler TDataServiceR
}

func (p *tDataServiceRProcessorGetData) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := TDataServiceRGetDataArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("getData", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := TDataServiceRGetDataResult{}
var retval *TDataResult_
  var err2 error
  if retval, err2 = p.handler.GetData(ctx, args.Key); err2 != nil {
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing getData: " + err2.Error())
    oprot.WriteMessageBegin("getData", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  } else {
    result.Success = retval
}
  if err2 = oprot.WriteMessageBegin("getData", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}


// HELPER FUNCTIONS AND STRUCTURES

// Attributes:
//  - Key
type TDataServiceRGetDataArgs struct {
  Key TKey `thrift:"key,1" db:"key" json:"key"`
}

func NewTDataServiceRGetDataArgs() *TDataServiceRGetDataArgs {
  return &TDataServiceRGetDataArgs{}
}


func (p *TDataServiceRGetDataArgs) GetKey() TKey {
  return p.Key
}
func (p *TDataServiceRGetDataArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if fieldTypeId == thrift.I64 {
        if err := p.ReadField1(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TDataServiceRGetDataArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  temp := TKey(v)
  p.Key = temp
}
  return nil
}

func (p *TDataServiceRGetDataArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("getData_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TDataServiceRGetDataArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("key", thrift.I64, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:key: ", p), err) }
  if err := oprot.WriteI64(int64(p.Key)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.key (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:key: ", p), err) }
  return err
}

func (p *TDataServiceRGetDataArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TDataServiceRGetDataArgs(%+v)", *p)
}

// Attributes:
//  - Success
type TDataServiceRGetDataResult struct {
  Success *TDataResult_ `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewTDataServiceRGetDataResult() *TDataServiceRGetDataResult {
  return &TDataServiceRGetDataResult{}
}

var TDataServiceRGetDataResult_Success_DEFAULT *TDataResult_
func (p *TDataServiceRGetDataResult) GetSuccess() *TDataResult_ {
  if !p.IsSetSuccess() {
    return TDataServiceRGetDataResult_Success_DEFAULT
  }
return p.Success
}
func (p *TDataServiceRGetDataResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *TDataServiceRGetDataResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if fieldTypeId == thrift.STRUCT {
        if err := p.ReadField0(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TDataServiceRGetDataResult)  ReadField0(iprot thrift.TProtocol) error {
  p.Success = &TDataResult_{}
  if err := p.Success.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Success), err)
  }
  return nil
}

func (p *TDataServiceRGetDataResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("getData_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TDataServiceRGetDataResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.STRUCT, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := p.Success.Write(oprot); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Success), err)
    }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *TDataServiceRGetDataResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TDataServiceRGetDataResult(%+v)", *p)
}


type TDataService interface {
TDataServiceR

  // Parameters:
  //  - Key
  //  - Data
  PutData(ctx context.Context, key TKey, data *TPlatformProfile) (r TErrorCode, err error)
}

type TDataServiceClient struct {
  c thrift.TClient
  *TDataServiceRClient
}

// Deprecated: Use NewTDataService instead
func NewTDataServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *TDataServiceClient {
  return &TDataServiceClient{TDataServiceRClient: NewTDataServiceRClientFactory(t, f)}}

// Deprecated: Use NewTDataService instead
func NewTDataServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *TDataServiceClient {
  return &TDataServiceClient{TDataServiceRClient: NewTDataServiceRClientProtocol(t, iprot, oprot)}
}

func NewTDataServiceClient(c thrift.TClient) *TDataServiceClient {
  return &TDataServiceClient{
    c: c,
    TDataServiceRClient: NewTDataServiceRClient(c),
  }
}

// Parameters:
//  - Key
//  - Data
func (p *TDataServiceClient) PutData(ctx context.Context, key TKey, data *TPlatformProfile) (r TErrorCode, err error) {
  var _args14 TDataServicePutDataArgs
  _args14.Key = key
  _args14.Data = data
  var _result15 TDataServicePutDataResult
  if err = p.c.Call(ctx, "putData", &_args14, &_result15); err != nil {
    return
  }
  return _result15.GetSuccess(), nil
}

type TDataServiceProcessor struct {
  *TDataServiceRProcessor
}

func NewTDataServiceProcessor(handler TDataService) *TDataServiceProcessor {
  self16 := &TDataServiceProcessor{NewTDataServiceRProcessor(handler)}
  self16.AddToProcessorMap("putData", &tDataServiceProcessorPutData{handler:handler})
  return self16
}

type tDataServiceProcessorPutData struct {
  handler TDataService
}

func (p *tDataServiceProcessorPutData) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := TDataServicePutDataArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("putData", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := TDataServicePutDataResult{}
var retval TErrorCode
  var err2 error
  if retval, err2 = p.handler.PutData(ctx, args.Key, args.Data); err2 != nil {
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing putData: " + err2.Error())
    oprot.WriteMessageBegin("putData", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  } else {
    result.Success = &retval
}
  if err2 = oprot.WriteMessageBegin("putData", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}


// HELPER FUNCTIONS AND STRUCTURES

// Attributes:
//  - Key
//  - Data
type TDataServicePutDataArgs struct {
  Key TKey `thrift:"key,1" db:"key" json:"key"`
  Data *TPlatformProfile `thrift:"data,2" db:"data" json:"data"`
}

func NewTDataServicePutDataArgs() *TDataServicePutDataArgs {
  return &TDataServicePutDataArgs{}
}


func (p *TDataServicePutDataArgs) GetKey() TKey {
  return p.Key
}
var TDataServicePutDataArgs_Data_DEFAULT *TPlatformProfile
func (p *TDataServicePutDataArgs) GetData() *TPlatformProfile {
  if !p.IsSetData() {
    return TDataServicePutDataArgs_Data_DEFAULT
  }
return p.Data
}
func (p *TDataServicePutDataArgs) IsSetData() bool {
  return p.Data != nil
}

func (p *TDataServicePutDataArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if fieldTypeId == thrift.I64 {
        if err := p.ReadField1(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 2:
      if fieldTypeId == thrift.STRUCT {
        if err := p.ReadField2(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TDataServicePutDataArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  temp := TKey(v)
  p.Key = temp
}
  return nil
}

func (p *TDataServicePutDataArgs)  ReadField2(iprot thrift.TProtocol) error {
  p.Data = &TPlatformProfile{}
  if err := p.Data.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.Data), err)
  }
  return nil
}

func (p *TDataServicePutDataArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("putData_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TDataServicePutDataArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("key", thrift.I64, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:key: ", p), err) }
  if err := oprot.WriteI64(int64(p.Key)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.key (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:key: ", p), err) }
  return err
}

func (p *TDataServicePutDataArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("data", thrift.STRUCT, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:data: ", p), err) }
  if err := p.Data.Write(oprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.Data), err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:data: ", p), err) }
  return err
}

func (p *TDataServicePutDataArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TDataServicePutDataArgs(%+v)", *p)
}

// Attributes:
//  - Success
type TDataServicePutDataResult struct {
  Success *TErrorCode `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewTDataServicePutDataResult() *TDataServicePutDataResult {
  return &TDataServicePutDataResult{}
}

var TDataServicePutDataResult_Success_DEFAULT TErrorCode
func (p *TDataServicePutDataResult) GetSuccess() TErrorCode {
  if !p.IsSetSuccess() {
    return TDataServicePutDataResult_Success_DEFAULT
  }
return *p.Success
}
func (p *TDataServicePutDataResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *TDataServicePutDataResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if fieldTypeId == thrift.I32 {
        if err := p.ReadField0(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TDataServicePutDataResult)  ReadField0(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 0: ", err)
} else {
  temp := TErrorCode(v)
  p.Success = &temp
}
  return nil
}

func (p *TDataServicePutDataResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("putData_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TDataServicePutDataResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.I32, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := oprot.WriteI32(int32(*p.Success)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T.success (0) field write error: ", p), err) }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *TDataServicePutDataResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TDataServicePutDataResult(%+v)", *p)
}


type TPlatformProfileService interface {
TDataService

  // Parameters:
  //  - UID
  //  - ExtKey
  //  - ExtValue
  SetExtData(ctx context.Context, uid TKey, extKey string, extValue string) (r string, err error)
  // Parameters:
  //  - UID
  //  - ExtKey
  GetExtData(ctx context.Context, uid TKey, extKey string) (r string, err error)
  // Parameters:
  //  - UID
  //  - Email
  //  - IsTrusted
  SetTrustedEmail(ctx context.Context, uid TKey, email string, isTrusted bool) (r bool, err error)
  // Parameters:
  //  - UID
  //  - Email
  RemoveTrustedEmail(ctx context.Context, uid TKey, email string) (r bool, err error)
  // Parameters:
  //  - UID
  //  - Email
  //  - IsTrusted
  SetTrustedMobile(ctx context.Context, uid TKey, email string, isTrusted bool) (r bool, err error)
  // Parameters:
  //  - UID
  //  - Mobile
  RemoveTrustedMobile(ctx context.Context, uid TKey, mobile string) (r bool, err error)
  // Parameters:
  //  - UID
  //  - SocialType
  //  - SocialProfile
  SetSocialInfo(ctx context.Context, uid TKey, socialType string, socialProfile *TSocialProfile) (r bool, err error)
  // Parameters:
  //  - UID
  //  - SocialType
  //  - SocialProfile
  RemoveSocialInfo(ctx context.Context, uid TKey, socialType string, socialProfile *TSocialProfile) (r bool, err error)
}

type TPlatformProfileServiceClient struct {
  c thrift.TClient
  *TDataServiceClient
}

// Deprecated: Use NewTPlatformProfileService instead
func NewTPlatformProfileServiceClientFactory(t thrift.TTransport, f thrift.TProtocolFactory) *TPlatformProfileServiceClient {
  return &TPlatformProfileServiceClient{TDataServiceClient: NewTDataServiceClientFactory(t, f)}}

// Deprecated: Use NewTPlatformProfileService instead
func NewTPlatformProfileServiceClientProtocol(t thrift.TTransport, iprot thrift.TProtocol, oprot thrift.TProtocol) *TPlatformProfileServiceClient {
  return &TPlatformProfileServiceClient{TDataServiceClient: NewTDataServiceClientProtocol(t, iprot, oprot)}
}

func NewTPlatformProfileServiceClient(c thrift.TClient) *TPlatformProfileServiceClient {
  return &TPlatformProfileServiceClient{
    c: c,
    TDataServiceClient: NewTDataServiceClient(c),
  }
}

// Parameters:
//  - UID
//  - ExtKey
//  - ExtValue
func (p *TPlatformProfileServiceClient) SetExtData(ctx context.Context, uid TKey, extKey string, extValue string) (r string, err error) {
  var _args25 TPlatformProfileServiceSetExtDataArgs
  _args25.UID = uid
  _args25.ExtKey = extKey
  _args25.ExtValue = extValue
  var _result26 TPlatformProfileServiceSetExtDataResult
  if err = p.c.Call(ctx, "setExtData", &_args25, &_result26); err != nil {
    return
  }
  return _result26.GetSuccess(), nil
}

// Parameters:
//  - UID
//  - ExtKey
func (p *TPlatformProfileServiceClient) GetExtData(ctx context.Context, uid TKey, extKey string) (r string, err error) {
  var _args27 TPlatformProfileServiceGetExtDataArgs
  _args27.UID = uid
  _args27.ExtKey = extKey
  var _result28 TPlatformProfileServiceGetExtDataResult
  if err = p.c.Call(ctx, "getExtData", &_args27, &_result28); err != nil {
    return
  }
  return _result28.GetSuccess(), nil
}

// Parameters:
//  - UID
//  - Email
//  - IsTrusted
func (p *TPlatformProfileServiceClient) SetTrustedEmail(ctx context.Context, uid TKey, email string, isTrusted bool) (r bool, err error) {
  var _args29 TPlatformProfileServiceSetTrustedEmailArgs
  _args29.UID = uid
  _args29.Email = email
  _args29.IsTrusted = isTrusted
  var _result30 TPlatformProfileServiceSetTrustedEmailResult
  if err = p.c.Call(ctx, "setTrustedEmail", &_args29, &_result30); err != nil {
    return
  }
  return _result30.GetSuccess(), nil
}

// Parameters:
//  - UID
//  - Email
func (p *TPlatformProfileServiceClient) RemoveTrustedEmail(ctx context.Context, uid TKey, email string) (r bool, err error) {
  var _args31 TPlatformProfileServiceRemoveTrustedEmailArgs
  _args31.UID = uid
  _args31.Email = email
  var _result32 TPlatformProfileServiceRemoveTrustedEmailResult
  if err = p.c.Call(ctx, "removeTrustedEmail", &_args31, &_result32); err != nil {
    return
  }
  return _result32.GetSuccess(), nil
}

// Parameters:
//  - UID
//  - Email
//  - IsTrusted
func (p *TPlatformProfileServiceClient) SetTrustedMobile(ctx context.Context, uid TKey, email string, isTrusted bool) (r bool, err error) {
  var _args33 TPlatformProfileServiceSetTrustedMobileArgs
  _args33.UID = uid
  _args33.Email = email
  _args33.IsTrusted = isTrusted
  var _result34 TPlatformProfileServiceSetTrustedMobileResult
  if err = p.c.Call(ctx, "setTrustedMobile", &_args33, &_result34); err != nil {
    return
  }
  return _result34.GetSuccess(), nil
}

// Parameters:
//  - UID
//  - Mobile
func (p *TPlatformProfileServiceClient) RemoveTrustedMobile(ctx context.Context, uid TKey, mobile string) (r bool, err error) {
  var _args35 TPlatformProfileServiceRemoveTrustedMobileArgs
  _args35.UID = uid
  _args35.Mobile = mobile
  var _result36 TPlatformProfileServiceRemoveTrustedMobileResult
  if err = p.c.Call(ctx, "removeTrustedMobile", &_args35, &_result36); err != nil {
    return
  }
  return _result36.GetSuccess(), nil
}

// Parameters:
//  - UID
//  - SocialType
//  - SocialProfile
func (p *TPlatformProfileServiceClient) SetSocialInfo(ctx context.Context, uid TKey, socialType string, socialProfile *TSocialProfile) (r bool, err error) {
  var _args37 TPlatformProfileServiceSetSocialInfoArgs
  _args37.UID = uid
  _args37.SocialType = socialType
  _args37.SocialProfile = socialProfile
  var _result38 TPlatformProfileServiceSetSocialInfoResult
  if err = p.c.Call(ctx, "setSocialInfo", &_args37, &_result38); err != nil {
    return
  }
  return _result38.GetSuccess(), nil
}

// Parameters:
//  - UID
//  - SocialType
//  - SocialProfile
func (p *TPlatformProfileServiceClient) RemoveSocialInfo(ctx context.Context, uid TKey, socialType string, socialProfile *TSocialProfile) (r bool, err error) {
  var _args39 TPlatformProfileServiceRemoveSocialInfoArgs
  _args39.UID = uid
  _args39.SocialType = socialType
  _args39.SocialProfile = socialProfile
  var _result40 TPlatformProfileServiceRemoveSocialInfoResult
  if err = p.c.Call(ctx, "removeSocialInfo", &_args39, &_result40); err != nil {
    return
  }
  return _result40.GetSuccess(), nil
}

type TPlatformProfileServiceProcessor struct {
  *TDataServiceProcessor
}

func NewTPlatformProfileServiceProcessor(handler TPlatformProfileService) *TPlatformProfileServiceProcessor {
  self41 := &TPlatformProfileServiceProcessor{NewTDataServiceProcessor(handler)}
  self41.AddToProcessorMap("setExtData", &tPlatformProfileServiceProcessorSetExtData{handler:handler})
  self41.AddToProcessorMap("getExtData", &tPlatformProfileServiceProcessorGetExtData{handler:handler})
  self41.AddToProcessorMap("setTrustedEmail", &tPlatformProfileServiceProcessorSetTrustedEmail{handler:handler})
  self41.AddToProcessorMap("removeTrustedEmail", &tPlatformProfileServiceProcessorRemoveTrustedEmail{handler:handler})
  self41.AddToProcessorMap("setTrustedMobile", &tPlatformProfileServiceProcessorSetTrustedMobile{handler:handler})
  self41.AddToProcessorMap("removeTrustedMobile", &tPlatformProfileServiceProcessorRemoveTrustedMobile{handler:handler})
  self41.AddToProcessorMap("setSocialInfo", &tPlatformProfileServiceProcessorSetSocialInfo{handler:handler})
  self41.AddToProcessorMap("removeSocialInfo", &tPlatformProfileServiceProcessorRemoveSocialInfo{handler:handler})
  return self41
}

type tPlatformProfileServiceProcessorSetExtData struct {
  handler TPlatformProfileService
}

func (p *tPlatformProfileServiceProcessorSetExtData) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := TPlatformProfileServiceSetExtDataArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("setExtData", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := TPlatformProfileServiceSetExtDataResult{}
var retval string
  var err2 error
  if retval, err2 = p.handler.SetExtData(ctx, args.UID, args.ExtKey, args.ExtValue); err2 != nil {
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing setExtData: " + err2.Error())
    oprot.WriteMessageBegin("setExtData", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  } else {
    result.Success = &retval
}
  if err2 = oprot.WriteMessageBegin("setExtData", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type tPlatformProfileServiceProcessorGetExtData struct {
  handler TPlatformProfileService
}

func (p *tPlatformProfileServiceProcessorGetExtData) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := TPlatformProfileServiceGetExtDataArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("getExtData", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := TPlatformProfileServiceGetExtDataResult{}
var retval string
  var err2 error
  if retval, err2 = p.handler.GetExtData(ctx, args.UID, args.ExtKey); err2 != nil {
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing getExtData: " + err2.Error())
    oprot.WriteMessageBegin("getExtData", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  } else {
    result.Success = &retval
}
  if err2 = oprot.WriteMessageBegin("getExtData", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type tPlatformProfileServiceProcessorSetTrustedEmail struct {
  handler TPlatformProfileService
}

func (p *tPlatformProfileServiceProcessorSetTrustedEmail) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := TPlatformProfileServiceSetTrustedEmailArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("setTrustedEmail", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := TPlatformProfileServiceSetTrustedEmailResult{}
var retval bool
  var err2 error
  if retval, err2 = p.handler.SetTrustedEmail(ctx, args.UID, args.Email, args.IsTrusted); err2 != nil {
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing setTrustedEmail: " + err2.Error())
    oprot.WriteMessageBegin("setTrustedEmail", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  } else {
    result.Success = &retval
}
  if err2 = oprot.WriteMessageBegin("setTrustedEmail", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type tPlatformProfileServiceProcessorRemoveTrustedEmail struct {
  handler TPlatformProfileService
}

func (p *tPlatformProfileServiceProcessorRemoveTrustedEmail) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := TPlatformProfileServiceRemoveTrustedEmailArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("removeTrustedEmail", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := TPlatformProfileServiceRemoveTrustedEmailResult{}
var retval bool
  var err2 error
  if retval, err2 = p.handler.RemoveTrustedEmail(ctx, args.UID, args.Email); err2 != nil {
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing removeTrustedEmail: " + err2.Error())
    oprot.WriteMessageBegin("removeTrustedEmail", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  } else {
    result.Success = &retval
}
  if err2 = oprot.WriteMessageBegin("removeTrustedEmail", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type tPlatformProfileServiceProcessorSetTrustedMobile struct {
  handler TPlatformProfileService
}

func (p *tPlatformProfileServiceProcessorSetTrustedMobile) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := TPlatformProfileServiceSetTrustedMobileArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("setTrustedMobile", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := TPlatformProfileServiceSetTrustedMobileResult{}
var retval bool
  var err2 error
  if retval, err2 = p.handler.SetTrustedMobile(ctx, args.UID, args.Email, args.IsTrusted); err2 != nil {
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing setTrustedMobile: " + err2.Error())
    oprot.WriteMessageBegin("setTrustedMobile", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  } else {
    result.Success = &retval
}
  if err2 = oprot.WriteMessageBegin("setTrustedMobile", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type tPlatformProfileServiceProcessorRemoveTrustedMobile struct {
  handler TPlatformProfileService
}

func (p *tPlatformProfileServiceProcessorRemoveTrustedMobile) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := TPlatformProfileServiceRemoveTrustedMobileArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("removeTrustedMobile", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := TPlatformProfileServiceRemoveTrustedMobileResult{}
var retval bool
  var err2 error
  if retval, err2 = p.handler.RemoveTrustedMobile(ctx, args.UID, args.Mobile); err2 != nil {
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing removeTrustedMobile: " + err2.Error())
    oprot.WriteMessageBegin("removeTrustedMobile", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  } else {
    result.Success = &retval
}
  if err2 = oprot.WriteMessageBegin("removeTrustedMobile", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type tPlatformProfileServiceProcessorSetSocialInfo struct {
  handler TPlatformProfileService
}

func (p *tPlatformProfileServiceProcessorSetSocialInfo) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := TPlatformProfileServiceSetSocialInfoArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("setSocialInfo", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := TPlatformProfileServiceSetSocialInfoResult{}
var retval bool
  var err2 error
  if retval, err2 = p.handler.SetSocialInfo(ctx, args.UID, args.SocialType, args.SocialProfile); err2 != nil {
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing setSocialInfo: " + err2.Error())
    oprot.WriteMessageBegin("setSocialInfo", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  } else {
    result.Success = &retval
}
  if err2 = oprot.WriteMessageBegin("setSocialInfo", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}

type tPlatformProfileServiceProcessorRemoveSocialInfo struct {
  handler TPlatformProfileService
}

func (p *tPlatformProfileServiceProcessorRemoveSocialInfo) Process(ctx context.Context, seqId int32, iprot, oprot thrift.TProtocol) (success bool, err thrift.TException) {
  args := TPlatformProfileServiceRemoveSocialInfoArgs{}
  if err = args.Read(iprot); err != nil {
    iprot.ReadMessageEnd()
    x := thrift.NewTApplicationException(thrift.PROTOCOL_ERROR, err.Error())
    oprot.WriteMessageBegin("removeSocialInfo", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return false, err
  }

  iprot.ReadMessageEnd()
  result := TPlatformProfileServiceRemoveSocialInfoResult{}
var retval bool
  var err2 error
  if retval, err2 = p.handler.RemoveSocialInfo(ctx, args.UID, args.SocialType, args.SocialProfile); err2 != nil {
    x := thrift.NewTApplicationException(thrift.INTERNAL_ERROR, "Internal error processing removeSocialInfo: " + err2.Error())
    oprot.WriteMessageBegin("removeSocialInfo", thrift.EXCEPTION, seqId)
    x.Write(oprot)
    oprot.WriteMessageEnd()
    oprot.Flush()
    return true, err2
  } else {
    result.Success = &retval
}
  if err2 = oprot.WriteMessageBegin("removeSocialInfo", thrift.REPLY, seqId); err2 != nil {
    err = err2
  }
  if err2 = result.Write(oprot); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.WriteMessageEnd(); err == nil && err2 != nil {
    err = err2
  }
  if err2 = oprot.Flush(); err == nil && err2 != nil {
    err = err2
  }
  if err != nil {
    return
  }
  return true, err
}


// HELPER FUNCTIONS AND STRUCTURES

// Attributes:
//  - UID
//  - ExtKey
//  - ExtValue
type TPlatformProfileServiceSetExtDataArgs struct {
  UID TKey `thrift:"uid,1" db:"uid" json:"uid"`
  ExtKey string `thrift:"extKey,2" db:"extKey" json:"extKey"`
  ExtValue string `thrift:"extValue,3" db:"extValue" json:"extValue"`
}

func NewTPlatformProfileServiceSetExtDataArgs() *TPlatformProfileServiceSetExtDataArgs {
  return &TPlatformProfileServiceSetExtDataArgs{}
}


func (p *TPlatformProfileServiceSetExtDataArgs) GetUID() TKey {
  return p.UID
}

func (p *TPlatformProfileServiceSetExtDataArgs) GetExtKey() string {
  return p.ExtKey
}

func (p *TPlatformProfileServiceSetExtDataArgs) GetExtValue() string {
  return p.ExtValue
}
func (p *TPlatformProfileServiceSetExtDataArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if fieldTypeId == thrift.I64 {
        if err := p.ReadField1(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 2:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField2(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 3:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField3(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceSetExtDataArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  temp := TKey(v)
  p.UID = temp
}
  return nil
}

func (p *TPlatformProfileServiceSetExtDataArgs)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.ExtKey = v
}
  return nil
}

func (p *TPlatformProfileServiceSetExtDataArgs)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.ExtValue = v
}
  return nil
}

func (p *TPlatformProfileServiceSetExtDataArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("setExtData_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceSetExtDataArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("uid", thrift.I64, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:uid: ", p), err) }
  if err := oprot.WriteI64(int64(p.UID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.uid (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:uid: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceSetExtDataArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("extKey", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:extKey: ", p), err) }
  if err := oprot.WriteString(string(p.ExtKey)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.extKey (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:extKey: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceSetExtDataArgs) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("extValue", thrift.STRING, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:extValue: ", p), err) }
  if err := oprot.WriteString(string(p.ExtValue)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.extValue (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:extValue: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceSetExtDataArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceSetExtDataArgs(%+v)", *p)
}

// Attributes:
//  - Success
type TPlatformProfileServiceSetExtDataResult struct {
  Success *string `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewTPlatformProfileServiceSetExtDataResult() *TPlatformProfileServiceSetExtDataResult {
  return &TPlatformProfileServiceSetExtDataResult{}
}

var TPlatformProfileServiceSetExtDataResult_Success_DEFAULT string
func (p *TPlatformProfileServiceSetExtDataResult) GetSuccess() string {
  if !p.IsSetSuccess() {
    return TPlatformProfileServiceSetExtDataResult_Success_DEFAULT
  }
return *p.Success
}
func (p *TPlatformProfileServiceSetExtDataResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *TPlatformProfileServiceSetExtDataResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField0(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceSetExtDataResult)  ReadField0(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 0: ", err)
} else {
  p.Success = &v
}
  return nil
}

func (p *TPlatformProfileServiceSetExtDataResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("setExtData_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceSetExtDataResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.STRING, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := oprot.WriteString(string(*p.Success)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T.success (0) field write error: ", p), err) }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *TPlatformProfileServiceSetExtDataResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceSetExtDataResult(%+v)", *p)
}

// Attributes:
//  - UID
//  - ExtKey
type TPlatformProfileServiceGetExtDataArgs struct {
  UID TKey `thrift:"uid,1" db:"uid" json:"uid"`
  ExtKey string `thrift:"extKey,2" db:"extKey" json:"extKey"`
}

func NewTPlatformProfileServiceGetExtDataArgs() *TPlatformProfileServiceGetExtDataArgs {
  return &TPlatformProfileServiceGetExtDataArgs{}
}


func (p *TPlatformProfileServiceGetExtDataArgs) GetUID() TKey {
  return p.UID
}

func (p *TPlatformProfileServiceGetExtDataArgs) GetExtKey() string {
  return p.ExtKey
}
func (p *TPlatformProfileServiceGetExtDataArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if fieldTypeId == thrift.I64 {
        if err := p.ReadField1(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 2:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField2(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceGetExtDataArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  temp := TKey(v)
  p.UID = temp
}
  return nil
}

func (p *TPlatformProfileServiceGetExtDataArgs)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.ExtKey = v
}
  return nil
}

func (p *TPlatformProfileServiceGetExtDataArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("getExtData_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceGetExtDataArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("uid", thrift.I64, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:uid: ", p), err) }
  if err := oprot.WriteI64(int64(p.UID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.uid (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:uid: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceGetExtDataArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("extKey", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:extKey: ", p), err) }
  if err := oprot.WriteString(string(p.ExtKey)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.extKey (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:extKey: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceGetExtDataArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceGetExtDataArgs(%+v)", *p)
}

// Attributes:
//  - Success
type TPlatformProfileServiceGetExtDataResult struct {
  Success *string `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewTPlatformProfileServiceGetExtDataResult() *TPlatformProfileServiceGetExtDataResult {
  return &TPlatformProfileServiceGetExtDataResult{}
}

var TPlatformProfileServiceGetExtDataResult_Success_DEFAULT string
func (p *TPlatformProfileServiceGetExtDataResult) GetSuccess() string {
  if !p.IsSetSuccess() {
    return TPlatformProfileServiceGetExtDataResult_Success_DEFAULT
  }
return *p.Success
}
func (p *TPlatformProfileServiceGetExtDataResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *TPlatformProfileServiceGetExtDataResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField0(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceGetExtDataResult)  ReadField0(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 0: ", err)
} else {
  p.Success = &v
}
  return nil
}

func (p *TPlatformProfileServiceGetExtDataResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("getExtData_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceGetExtDataResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.STRING, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := oprot.WriteString(string(*p.Success)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T.success (0) field write error: ", p), err) }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *TPlatformProfileServiceGetExtDataResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceGetExtDataResult(%+v)", *p)
}

// Attributes:
//  - UID
//  - Email
//  - IsTrusted
type TPlatformProfileServiceSetTrustedEmailArgs struct {
  UID TKey `thrift:"uid,1" db:"uid" json:"uid"`
  Email string `thrift:"email,2" db:"email" json:"email"`
  IsTrusted bool `thrift:"isTrusted,3" db:"isTrusted" json:"isTrusted"`
}

func NewTPlatformProfileServiceSetTrustedEmailArgs() *TPlatformProfileServiceSetTrustedEmailArgs {
  return &TPlatformProfileServiceSetTrustedEmailArgs{}
}


func (p *TPlatformProfileServiceSetTrustedEmailArgs) GetUID() TKey {
  return p.UID
}

func (p *TPlatformProfileServiceSetTrustedEmailArgs) GetEmail() string {
  return p.Email
}

func (p *TPlatformProfileServiceSetTrustedEmailArgs) GetIsTrusted() bool {
  return p.IsTrusted
}
func (p *TPlatformProfileServiceSetTrustedEmailArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if fieldTypeId == thrift.I64 {
        if err := p.ReadField1(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 2:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField2(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 3:
      if fieldTypeId == thrift.BOOL {
        if err := p.ReadField3(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceSetTrustedEmailArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  temp := TKey(v)
  p.UID = temp
}
  return nil
}

func (p *TPlatformProfileServiceSetTrustedEmailArgs)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.Email = v
}
  return nil
}

func (p *TPlatformProfileServiceSetTrustedEmailArgs)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadBool(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.IsTrusted = v
}
  return nil
}

func (p *TPlatformProfileServiceSetTrustedEmailArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("setTrustedEmail_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceSetTrustedEmailArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("uid", thrift.I64, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:uid: ", p), err) }
  if err := oprot.WriteI64(int64(p.UID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.uid (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:uid: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceSetTrustedEmailArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("email", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:email: ", p), err) }
  if err := oprot.WriteString(string(p.Email)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.email (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:email: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceSetTrustedEmailArgs) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("isTrusted", thrift.BOOL, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:isTrusted: ", p), err) }
  if err := oprot.WriteBool(bool(p.IsTrusted)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.isTrusted (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:isTrusted: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceSetTrustedEmailArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceSetTrustedEmailArgs(%+v)", *p)
}

// Attributes:
//  - Success
type TPlatformProfileServiceSetTrustedEmailResult struct {
  Success *bool `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewTPlatformProfileServiceSetTrustedEmailResult() *TPlatformProfileServiceSetTrustedEmailResult {
  return &TPlatformProfileServiceSetTrustedEmailResult{}
}

var TPlatformProfileServiceSetTrustedEmailResult_Success_DEFAULT bool
func (p *TPlatformProfileServiceSetTrustedEmailResult) GetSuccess() bool {
  if !p.IsSetSuccess() {
    return TPlatformProfileServiceSetTrustedEmailResult_Success_DEFAULT
  }
return *p.Success
}
func (p *TPlatformProfileServiceSetTrustedEmailResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *TPlatformProfileServiceSetTrustedEmailResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if fieldTypeId == thrift.BOOL {
        if err := p.ReadField0(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceSetTrustedEmailResult)  ReadField0(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadBool(); err != nil {
  return thrift.PrependError("error reading field 0: ", err)
} else {
  p.Success = &v
}
  return nil
}

func (p *TPlatformProfileServiceSetTrustedEmailResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("setTrustedEmail_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceSetTrustedEmailResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.BOOL, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := oprot.WriteBool(bool(*p.Success)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T.success (0) field write error: ", p), err) }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *TPlatformProfileServiceSetTrustedEmailResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceSetTrustedEmailResult(%+v)", *p)
}

// Attributes:
//  - UID
//  - Email
type TPlatformProfileServiceRemoveTrustedEmailArgs struct {
  UID TKey `thrift:"uid,1" db:"uid" json:"uid"`
  Email string `thrift:"email,2" db:"email" json:"email"`
}

func NewTPlatformProfileServiceRemoveTrustedEmailArgs() *TPlatformProfileServiceRemoveTrustedEmailArgs {
  return &TPlatformProfileServiceRemoveTrustedEmailArgs{}
}


func (p *TPlatformProfileServiceRemoveTrustedEmailArgs) GetUID() TKey {
  return p.UID
}

func (p *TPlatformProfileServiceRemoveTrustedEmailArgs) GetEmail() string {
  return p.Email
}
func (p *TPlatformProfileServiceRemoveTrustedEmailArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if fieldTypeId == thrift.I64 {
        if err := p.ReadField1(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 2:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField2(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceRemoveTrustedEmailArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  temp := TKey(v)
  p.UID = temp
}
  return nil
}

func (p *TPlatformProfileServiceRemoveTrustedEmailArgs)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.Email = v
}
  return nil
}

func (p *TPlatformProfileServiceRemoveTrustedEmailArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("removeTrustedEmail_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceRemoveTrustedEmailArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("uid", thrift.I64, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:uid: ", p), err) }
  if err := oprot.WriteI64(int64(p.UID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.uid (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:uid: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceRemoveTrustedEmailArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("email", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:email: ", p), err) }
  if err := oprot.WriteString(string(p.Email)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.email (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:email: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceRemoveTrustedEmailArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceRemoveTrustedEmailArgs(%+v)", *p)
}

// Attributes:
//  - Success
type TPlatformProfileServiceRemoveTrustedEmailResult struct {
  Success *bool `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewTPlatformProfileServiceRemoveTrustedEmailResult() *TPlatformProfileServiceRemoveTrustedEmailResult {
  return &TPlatformProfileServiceRemoveTrustedEmailResult{}
}

var TPlatformProfileServiceRemoveTrustedEmailResult_Success_DEFAULT bool
func (p *TPlatformProfileServiceRemoveTrustedEmailResult) GetSuccess() bool {
  if !p.IsSetSuccess() {
    return TPlatformProfileServiceRemoveTrustedEmailResult_Success_DEFAULT
  }
return *p.Success
}
func (p *TPlatformProfileServiceRemoveTrustedEmailResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *TPlatformProfileServiceRemoveTrustedEmailResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if fieldTypeId == thrift.BOOL {
        if err := p.ReadField0(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceRemoveTrustedEmailResult)  ReadField0(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadBool(); err != nil {
  return thrift.PrependError("error reading field 0: ", err)
} else {
  p.Success = &v
}
  return nil
}

func (p *TPlatformProfileServiceRemoveTrustedEmailResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("removeTrustedEmail_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceRemoveTrustedEmailResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.BOOL, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := oprot.WriteBool(bool(*p.Success)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T.success (0) field write error: ", p), err) }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *TPlatformProfileServiceRemoveTrustedEmailResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceRemoveTrustedEmailResult(%+v)", *p)
}

// Attributes:
//  - UID
//  - Email
//  - IsTrusted
type TPlatformProfileServiceSetTrustedMobileArgs struct {
  UID TKey `thrift:"uid,1" db:"uid" json:"uid"`
  Email string `thrift:"email,2" db:"email" json:"email"`
  IsTrusted bool `thrift:"isTrusted,3" db:"isTrusted" json:"isTrusted"`
}

func NewTPlatformProfileServiceSetTrustedMobileArgs() *TPlatformProfileServiceSetTrustedMobileArgs {
  return &TPlatformProfileServiceSetTrustedMobileArgs{}
}


func (p *TPlatformProfileServiceSetTrustedMobileArgs) GetUID() TKey {
  return p.UID
}

func (p *TPlatformProfileServiceSetTrustedMobileArgs) GetEmail() string {
  return p.Email
}

func (p *TPlatformProfileServiceSetTrustedMobileArgs) GetIsTrusted() bool {
  return p.IsTrusted
}
func (p *TPlatformProfileServiceSetTrustedMobileArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if fieldTypeId == thrift.I64 {
        if err := p.ReadField1(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 2:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField2(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 3:
      if fieldTypeId == thrift.BOOL {
        if err := p.ReadField3(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceSetTrustedMobileArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  temp := TKey(v)
  p.UID = temp
}
  return nil
}

func (p *TPlatformProfileServiceSetTrustedMobileArgs)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.Email = v
}
  return nil
}

func (p *TPlatformProfileServiceSetTrustedMobileArgs)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadBool(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.IsTrusted = v
}
  return nil
}

func (p *TPlatformProfileServiceSetTrustedMobileArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("setTrustedMobile_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceSetTrustedMobileArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("uid", thrift.I64, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:uid: ", p), err) }
  if err := oprot.WriteI64(int64(p.UID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.uid (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:uid: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceSetTrustedMobileArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("email", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:email: ", p), err) }
  if err := oprot.WriteString(string(p.Email)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.email (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:email: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceSetTrustedMobileArgs) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("isTrusted", thrift.BOOL, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:isTrusted: ", p), err) }
  if err := oprot.WriteBool(bool(p.IsTrusted)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.isTrusted (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:isTrusted: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceSetTrustedMobileArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceSetTrustedMobileArgs(%+v)", *p)
}

// Attributes:
//  - Success
type TPlatformProfileServiceSetTrustedMobileResult struct {
  Success *bool `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewTPlatformProfileServiceSetTrustedMobileResult() *TPlatformProfileServiceSetTrustedMobileResult {
  return &TPlatformProfileServiceSetTrustedMobileResult{}
}

var TPlatformProfileServiceSetTrustedMobileResult_Success_DEFAULT bool
func (p *TPlatformProfileServiceSetTrustedMobileResult) GetSuccess() bool {
  if !p.IsSetSuccess() {
    return TPlatformProfileServiceSetTrustedMobileResult_Success_DEFAULT
  }
return *p.Success
}
func (p *TPlatformProfileServiceSetTrustedMobileResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *TPlatformProfileServiceSetTrustedMobileResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if fieldTypeId == thrift.BOOL {
        if err := p.ReadField0(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceSetTrustedMobileResult)  ReadField0(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadBool(); err != nil {
  return thrift.PrependError("error reading field 0: ", err)
} else {
  p.Success = &v
}
  return nil
}

func (p *TPlatformProfileServiceSetTrustedMobileResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("setTrustedMobile_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceSetTrustedMobileResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.BOOL, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := oprot.WriteBool(bool(*p.Success)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T.success (0) field write error: ", p), err) }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *TPlatformProfileServiceSetTrustedMobileResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceSetTrustedMobileResult(%+v)", *p)
}

// Attributes:
//  - UID
//  - Mobile
type TPlatformProfileServiceRemoveTrustedMobileArgs struct {
  UID TKey `thrift:"uid,1" db:"uid" json:"uid"`
  Mobile string `thrift:"mobile,2" db:"mobile" json:"mobile"`
}

func NewTPlatformProfileServiceRemoveTrustedMobileArgs() *TPlatformProfileServiceRemoveTrustedMobileArgs {
  return &TPlatformProfileServiceRemoveTrustedMobileArgs{}
}


func (p *TPlatformProfileServiceRemoveTrustedMobileArgs) GetUID() TKey {
  return p.UID
}

func (p *TPlatformProfileServiceRemoveTrustedMobileArgs) GetMobile() string {
  return p.Mobile
}
func (p *TPlatformProfileServiceRemoveTrustedMobileArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if fieldTypeId == thrift.I64 {
        if err := p.ReadField1(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 2:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField2(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceRemoveTrustedMobileArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  temp := TKey(v)
  p.UID = temp
}
  return nil
}

func (p *TPlatformProfileServiceRemoveTrustedMobileArgs)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.Mobile = v
}
  return nil
}

func (p *TPlatformProfileServiceRemoveTrustedMobileArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("removeTrustedMobile_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceRemoveTrustedMobileArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("uid", thrift.I64, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:uid: ", p), err) }
  if err := oprot.WriteI64(int64(p.UID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.uid (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:uid: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceRemoveTrustedMobileArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("mobile", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:mobile: ", p), err) }
  if err := oprot.WriteString(string(p.Mobile)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.mobile (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:mobile: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceRemoveTrustedMobileArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceRemoveTrustedMobileArgs(%+v)", *p)
}

// Attributes:
//  - Success
type TPlatformProfileServiceRemoveTrustedMobileResult struct {
  Success *bool `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewTPlatformProfileServiceRemoveTrustedMobileResult() *TPlatformProfileServiceRemoveTrustedMobileResult {
  return &TPlatformProfileServiceRemoveTrustedMobileResult{}
}

var TPlatformProfileServiceRemoveTrustedMobileResult_Success_DEFAULT bool
func (p *TPlatformProfileServiceRemoveTrustedMobileResult) GetSuccess() bool {
  if !p.IsSetSuccess() {
    return TPlatformProfileServiceRemoveTrustedMobileResult_Success_DEFAULT
  }
return *p.Success
}
func (p *TPlatformProfileServiceRemoveTrustedMobileResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *TPlatformProfileServiceRemoveTrustedMobileResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if fieldTypeId == thrift.BOOL {
        if err := p.ReadField0(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceRemoveTrustedMobileResult)  ReadField0(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadBool(); err != nil {
  return thrift.PrependError("error reading field 0: ", err)
} else {
  p.Success = &v
}
  return nil
}

func (p *TPlatformProfileServiceRemoveTrustedMobileResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("removeTrustedMobile_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceRemoveTrustedMobileResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.BOOL, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := oprot.WriteBool(bool(*p.Success)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T.success (0) field write error: ", p), err) }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *TPlatformProfileServiceRemoveTrustedMobileResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceRemoveTrustedMobileResult(%+v)", *p)
}

// Attributes:
//  - UID
//  - SocialType
//  - SocialProfile
type TPlatformProfileServiceSetSocialInfoArgs struct {
  UID TKey `thrift:"uid,1" db:"uid" json:"uid"`
  SocialType string `thrift:"socialType,2" db:"socialType" json:"socialType"`
  SocialProfile *TSocialProfile `thrift:"socialProfile,3" db:"socialProfile" json:"socialProfile"`
}

func NewTPlatformProfileServiceSetSocialInfoArgs() *TPlatformProfileServiceSetSocialInfoArgs {
  return &TPlatformProfileServiceSetSocialInfoArgs{}
}


func (p *TPlatformProfileServiceSetSocialInfoArgs) GetUID() TKey {
  return p.UID
}

func (p *TPlatformProfileServiceSetSocialInfoArgs) GetSocialType() string {
  return p.SocialType
}
var TPlatformProfileServiceSetSocialInfoArgs_SocialProfile_DEFAULT *TSocialProfile
func (p *TPlatformProfileServiceSetSocialInfoArgs) GetSocialProfile() *TSocialProfile {
  if !p.IsSetSocialProfile() {
    return TPlatformProfileServiceSetSocialInfoArgs_SocialProfile_DEFAULT
  }
return p.SocialProfile
}
func (p *TPlatformProfileServiceSetSocialInfoArgs) IsSetSocialProfile() bool {
  return p.SocialProfile != nil
}

func (p *TPlatformProfileServiceSetSocialInfoArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if fieldTypeId == thrift.I64 {
        if err := p.ReadField1(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 2:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField2(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 3:
      if fieldTypeId == thrift.STRUCT {
        if err := p.ReadField3(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceSetSocialInfoArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  temp := TKey(v)
  p.UID = temp
}
  return nil
}

func (p *TPlatformProfileServiceSetSocialInfoArgs)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.SocialType = v
}
  return nil
}

func (p *TPlatformProfileServiceSetSocialInfoArgs)  ReadField3(iprot thrift.TProtocol) error {
  p.SocialProfile = &TSocialProfile{}
  if err := p.SocialProfile.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.SocialProfile), err)
  }
  return nil
}

func (p *TPlatformProfileServiceSetSocialInfoArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("setSocialInfo_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceSetSocialInfoArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("uid", thrift.I64, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:uid: ", p), err) }
  if err := oprot.WriteI64(int64(p.UID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.uid (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:uid: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceSetSocialInfoArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("socialType", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:socialType: ", p), err) }
  if err := oprot.WriteString(string(p.SocialType)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.socialType (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:socialType: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceSetSocialInfoArgs) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("socialProfile", thrift.STRUCT, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:socialProfile: ", p), err) }
  if err := p.SocialProfile.Write(oprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.SocialProfile), err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:socialProfile: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceSetSocialInfoArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceSetSocialInfoArgs(%+v)", *p)
}

// Attributes:
//  - Success
type TPlatformProfileServiceSetSocialInfoResult struct {
  Success *bool `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewTPlatformProfileServiceSetSocialInfoResult() *TPlatformProfileServiceSetSocialInfoResult {
  return &TPlatformProfileServiceSetSocialInfoResult{}
}

var TPlatformProfileServiceSetSocialInfoResult_Success_DEFAULT bool
func (p *TPlatformProfileServiceSetSocialInfoResult) GetSuccess() bool {
  if !p.IsSetSuccess() {
    return TPlatformProfileServiceSetSocialInfoResult_Success_DEFAULT
  }
return *p.Success
}
func (p *TPlatformProfileServiceSetSocialInfoResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *TPlatformProfileServiceSetSocialInfoResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if fieldTypeId == thrift.BOOL {
        if err := p.ReadField0(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceSetSocialInfoResult)  ReadField0(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadBool(); err != nil {
  return thrift.PrependError("error reading field 0: ", err)
} else {
  p.Success = &v
}
  return nil
}

func (p *TPlatformProfileServiceSetSocialInfoResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("setSocialInfo_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceSetSocialInfoResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.BOOL, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := oprot.WriteBool(bool(*p.Success)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T.success (0) field write error: ", p), err) }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *TPlatformProfileServiceSetSocialInfoResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceSetSocialInfoResult(%+v)", *p)
}

// Attributes:
//  - UID
//  - SocialType
//  - SocialProfile
type TPlatformProfileServiceRemoveSocialInfoArgs struct {
  UID TKey `thrift:"uid,1" db:"uid" json:"uid"`
  SocialType string `thrift:"socialType,2" db:"socialType" json:"socialType"`
  SocialProfile *TSocialProfile `thrift:"socialProfile,3" db:"socialProfile" json:"socialProfile"`
}

func NewTPlatformProfileServiceRemoveSocialInfoArgs() *TPlatformProfileServiceRemoveSocialInfoArgs {
  return &TPlatformProfileServiceRemoveSocialInfoArgs{}
}


func (p *TPlatformProfileServiceRemoveSocialInfoArgs) GetUID() TKey {
  return p.UID
}

func (p *TPlatformProfileServiceRemoveSocialInfoArgs) GetSocialType() string {
  return p.SocialType
}
var TPlatformProfileServiceRemoveSocialInfoArgs_SocialProfile_DEFAULT *TSocialProfile
func (p *TPlatformProfileServiceRemoveSocialInfoArgs) GetSocialProfile() *TSocialProfile {
  if !p.IsSetSocialProfile() {
    return TPlatformProfileServiceRemoveSocialInfoArgs_SocialProfile_DEFAULT
  }
return p.SocialProfile
}
func (p *TPlatformProfileServiceRemoveSocialInfoArgs) IsSetSocialProfile() bool {
  return p.SocialProfile != nil
}

func (p *TPlatformProfileServiceRemoveSocialInfoArgs) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if fieldTypeId == thrift.I64 {
        if err := p.ReadField1(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 2:
      if fieldTypeId == thrift.STRING {
        if err := p.ReadField2(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    case 3:
      if fieldTypeId == thrift.STRUCT {
        if err := p.ReadField3(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceRemoveSocialInfoArgs)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  temp := TKey(v)
  p.UID = temp
}
  return nil
}

func (p *TPlatformProfileServiceRemoveSocialInfoArgs)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.SocialType = v
}
  return nil
}

func (p *TPlatformProfileServiceRemoveSocialInfoArgs)  ReadField3(iprot thrift.TProtocol) error {
  p.SocialProfile = &TSocialProfile{}
  if err := p.SocialProfile.Read(iprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.SocialProfile), err)
  }
  return nil
}

func (p *TPlatformProfileServiceRemoveSocialInfoArgs) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("removeSocialInfo_args"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceRemoveSocialInfoArgs) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("uid", thrift.I64, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:uid: ", p), err) }
  if err := oprot.WriteI64(int64(p.UID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.uid (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:uid: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceRemoveSocialInfoArgs) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("socialType", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:socialType: ", p), err) }
  if err := oprot.WriteString(string(p.SocialType)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.socialType (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:socialType: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceRemoveSocialInfoArgs) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("socialProfile", thrift.STRUCT, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:socialProfile: ", p), err) }
  if err := p.SocialProfile.Write(oprot); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.SocialProfile), err)
  }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:socialProfile: ", p), err) }
  return err
}

func (p *TPlatformProfileServiceRemoveSocialInfoArgs) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceRemoveSocialInfoArgs(%+v)", *p)
}

// Attributes:
//  - Success
type TPlatformProfileServiceRemoveSocialInfoResult struct {
  Success *bool `thrift:"success,0" db:"success" json:"success,omitempty"`
}

func NewTPlatformProfileServiceRemoveSocialInfoResult() *TPlatformProfileServiceRemoveSocialInfoResult {
  return &TPlatformProfileServiceRemoveSocialInfoResult{}
}

var TPlatformProfileServiceRemoveSocialInfoResult_Success_DEFAULT bool
func (p *TPlatformProfileServiceRemoveSocialInfoResult) GetSuccess() bool {
  if !p.IsSetSuccess() {
    return TPlatformProfileServiceRemoveSocialInfoResult_Success_DEFAULT
  }
return *p.Success
}
func (p *TPlatformProfileServiceRemoveSocialInfoResult) IsSetSuccess() bool {
  return p.Success != nil
}

func (p *TPlatformProfileServiceRemoveSocialInfoResult) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 0:
      if fieldTypeId == thrift.BOOL {
        if err := p.ReadField0(iprot); err != nil {
          return err
        }
      } else {
        if err := iprot.Skip(fieldTypeId); err != nil {
          return err
        }
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *TPlatformProfileServiceRemoveSocialInfoResult)  ReadField0(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadBool(); err != nil {
  return thrift.PrependError("error reading field 0: ", err)
} else {
  p.Success = &v
}
  return nil
}

func (p *TPlatformProfileServiceRemoveSocialInfoResult) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("removeSocialInfo_result"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField0(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *TPlatformProfileServiceRemoveSocialInfoResult) writeField0(oprot thrift.TProtocol) (err error) {
  if p.IsSetSuccess() {
    if err := oprot.WriteFieldBegin("success", thrift.BOOL, 0); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field begin error 0:success: ", p), err) }
    if err := oprot.WriteBool(bool(*p.Success)); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T.success (0) field write error: ", p), err) }
    if err := oprot.WriteFieldEnd(); err != nil {
      return thrift.PrependError(fmt.Sprintf("%T write field end error 0:success: ", p), err) }
  }
  return err
}

func (p *TPlatformProfileServiceRemoveSocialInfoResult) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("TPlatformProfileServiceRemoveSocialInfoResult(%+v)", *p)
}


